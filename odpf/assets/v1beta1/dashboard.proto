syntax = "proto3";

package odpf.assets.v1beta1;

import "odpf/assets/v1beta1/event.proto";
import "odpf/assets/v1beta1/resource.proto";
import "odpf/assets/v1beta1/timestamp.proto";
import "odpf/assets/v1beta1/lineage.proto";
import "odpf/assets/v1beta1/ownership.proto";
import "odpf/assets/v1beta1/properties.proto";

option go_package = "github.com/odpf/proton/assets/v1beta1;assetsv1beta1";
option java_outer_classname = "DashboardProto";
option java_package = "io.odpf.assets";

// Dashboard is a resource that represents a dashboard.
message Dashboard {
  // Representation of the resource
  odpf.assets.v1beta1.Resource resource = 1;

  // The list of the charts in the dashboard.
  // For an example, check the schema of the chart.
  repeated Chart charts = 21;

  // The ownership of the dashboard.
  // For an example check out ownership.
  odpf.assets.v1beta1.Ownership ownership = 31;

  // List of the user's custom properties.
  // Properties facet can be used to set custom properties, tags and labels for a user.
  odpf.assets.v1beta1.Properties properties = 32;

  // The timestamp of the user's creation.
  // Timstamp facet can be used to set the creation and updation timestamp of a user.
  odpf.assets.v1beta1.Timestamp timestamps = 33;

  // The lineage of the dashboard.
  // For an example check out lineage schema.
  odpf.assets.v1beta1.Lineage lineage = 34;

  // The timestamp of the generated event.
  // Event schemas is defined in the common event schema.
  odpf.assets.v1beta1.Event event = 100;
}

message Chart {
  // The URN of the chart.
  // Example: `chart:1`.
  string urn = 1;

  // The name of the chart.
  // Example: `My Chart`.
  string name = 2;

  // The type of the chart.
  // Example: `line`.
  string type = 3;

  // The source of the chart.
  // Example: `metabase`.
  string source = 4;

  // The description of the chart.
  // Example: `This is a chart for my dashboard.`
  string description = 5;

  // The url of the chart.
  // Example: `http://metabase.com/charts/mychart`.
  string url = 6;

  // The raw query of the chart.
  // Example: `SELECT * FROM my_table`.
  string raw_query = 7;

  // The source of the data.
  // Example: `bigquery,graphite`.
  string data_source = 8;

  // The dashboard ur of the chart.
  // Example: `dashboard:1`.
  string dashboard_urn = 9;

  // The source of the dashboard of the chart.
  // Example: `metabase`.
  string dashboard_source = 10;

  // The ownership of the dashboard.
  // For an example check out ownership.
  odpf.assets.v1beta1.Ownership ownership = 31;

  // The lineage of the chart.
  // For an example check out lineage schema.
  odpf.assets.v1beta1.Lineage lineage = 32;

  // List of the user's custom properties.
  // Properties facet can be used to set custom properties, tags and labels for a dashboard.
  odpf.assets.v1beta1.Properties properties = 33;

  // The timestamp of the user's creation.
  // Timstamp facet can be used to set the creation and updation timestamp of a dashboard.
  odpf.assets.v1beta1.Timestamp timestamps = 34;

  // The timestamp of the generated event.
  // Event schemas is defined in the common event schema.
  odpf.assets.v1beta1.Event event = 100;
}
