syntax = "proto3";

package raystack.guardian.v1beta1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/raystack/proton/guardian/v1beta1;guardianv1beta1";
// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Guardian APIs",
    version: "0.1.0"
  };
  schemes: HTTP;
  tags: [
    {
      name: "Providers",
      description: "Providers API"
    },
    {
      name: "Resources",
      description: "Resources API"
    },
    {
      name: "Policies",
      description: "Policies API"
    }
  ]
  consumes: "application/json";
  produces: "application/json";
  host: "127.0.0.1:7400";
  responses: {
    key: "200";
    value: {
      description: "OK - A successful response.";
      schema: {
        json_schema: {ref: ".google.rpc.Status"}
      }
    }
  }
  responses: {
    key: "400";
    value: {
      description: "Bad Request - The request was malformed or contained invalid parameters.";
      schema: {
        json_schema: {ref: ".google.rpc.Status"}
      }
    }
  }
  responses: {
    key: "401";
    value: {
      description: "Unauthorized - Authentication is required";
      schema: {
        json_schema: {ref: ".google.rpc.Status"}
      }
    }
  }
  responses: {
    key: "403";
    value: {
      description: "Forbidden - User does not have permission to access the resource";
      schema: {
        json_schema: {ref: ".google.rpc.Status"}
      }
    }
  }
  responses: {
    key: "404";
    value: {
      description: "Not Found - The requested resource was not found";
      schema: {
        json_schema: {ref: ".google.rpc.Status"}
      }
    }
  }
  responses: {
    key: "500";
    value: {
      description: "Internal Server Error. Returned when theres is something wrong with Frontier server.";
      schema: {
        json_schema: {ref: ".google.rpc.Status"}
      }
    }
  }
  security_definitions: {
    security: {
      key: "Basic";
      value: {
        type: TYPE_BASIC;
        in: IN_HEADER;
        name: "Basic Authentication";
        description: "Client ID/Secret authentication";
      }
    }
  }
  security: {
    security_requirement: {key: "Basic"}
  }
};

// WARNING: This is still in active development and can have breaking changes
service GuardianService {
  rpc ListProviders(ListProvidersRequest) returns (ListProvidersResponse) {
    option (google.api.http) = {get: "/v1beta1/providers"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Providers";
      summary: "List Providers";
      description: "ListProviders returns a list of providers supported by Guardian";
    };
  }

  rpc GetProvider(GetProviderRequest) returns (GetProviderResponse) {
    option (google.api.http) = {get: "/v1beta1/providers/{id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Providers";
      summary: "Get Provider";
      description: "GetProvider returns a provider by ID";
    };
  }

  rpc GetProviderTypes(GetProviderTypesRequest) returns (GetProviderTypesResponse) {
    option (google.api.http) = {get: "/v1beta1/providers/types"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Providers";
      summary: "Get Provider Types";
      description: "GetProviderTypes returns a list of provider types supported by Guardian";
    };
  }

  rpc CreateProvider(CreateProviderRequest) returns (CreateProviderResponse) {
    option (google.api.http) = {
      post: "/v1beta1/providers"
      body: "config"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Providers";
      summary: "Create Provider";
      description: "Create Provider registers a new provider in Guardian. Once a provider config is registered, Guardian will immediately fetch the resources and store it in the database.";
    };
  }

  rpc UpdateProvider(UpdateProviderRequest) returns (UpdateProviderResponse) {
    option (google.api.http) = {
      put: "/v1beta1/providers/{id}"
      body: "config"
      additional_bindings: {
        put: "/v1beta1/providers/{config.type}/{config.urn}"
        body: "config"
      }
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Providers";
      summary: "Update Provider";
      description: "UpdateProvider updates a provider config in Guardian";
    };
  }

  rpc DeleteProvider(DeleteProviderRequest) returns (DeleteProviderResponse) {
    option (google.api.http) = {delete: "/v1beta1/providers/{id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Providers";
      summary: "Delete Provider";
      description: "DeleteProvider deletes a provider regsitered in Guardian database";
    };
  }

  rpc ListRoles(ListRolesRequest) returns (ListRolesResponse) {
    option (google.api.http) = {get: "/v1beta1/providers/{id}/resources/{resource_type}/roles"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Roles";
      summary: "List Roles";
      description: "ListRoles returns a list of roles supported by a provider. The roles are defined in the provider config.";
    };
  }

  rpc ImportActivities(ImportActivitiesRequest) returns (ImportActivitiesResponse) {
    option (google.api.http) = {
      post: "/v1beta1/activities/import"
      body: "*"
    };
  }

  rpc GetActivity(GetActivityRequest) returns (GetActivityResponse) {
    option (google.api.http) = {get: "/v1beta1/activities/{id}"};
  }

  rpc ListActivities(ListActivitiesRequest) returns (ListActivitiesResponse) {
    option (google.api.http) = {get: "/v1beta1/activities"};
  }

  rpc ListPolicies(ListPoliciesRequest) returns (ListPoliciesResponse) {
    option (google.api.http) = {get: "/v1beta1/policies"};
  }

  rpc GetPolicy(GetPolicyRequest) returns (GetPolicyResponse) {
    option (google.api.http) = {get: "/v1beta1/policies/{id}/versions/{version}"};
  }

  rpc CreatePolicy(CreatePolicyRequest) returns (CreatePolicyResponse) {
    option (google.api.http) = {
      post: "/v1beta1/policies"
      body: "policy"
    };
  }

  rpc UpdatePolicy(UpdatePolicyRequest) returns (UpdatePolicyResponse) {
    option (google.api.http) = {
      put: "/v1beta1/policies/{id}"
      body: "policy"
    };
  }

  rpc GetPolicyPreferences(GetPolicyPreferencesRequest) returns (GetPolicyPreferencesResponse) {
    option (google.api.http) = {get: "/v1beta1/policies/{id}/versions/{version}/preferences"};
  }

  rpc ListResources(ListResourcesRequest) returns (ListResourcesResponse) {
    option (google.api.http) = {get: "/v1beta1/resources"};
  }

  rpc GetResource(GetResourceRequest) returns (GetResourceResponse) {
    option (google.api.http) = {get: "/v1beta1/resources/{id}"};
  }

  rpc UpdateResource(UpdateResourceRequest) returns (UpdateResourceResponse) {
    option (google.api.http) = {
      put: "/v1beta1/resources/{id}"
      body: "resource"
    };
  }

  rpc DeleteResource(DeleteResourceRequest) returns (DeleteResourceResponse) {
    option (google.api.http) = {delete: "/v1beta1/resources/{id}"};
  }

  rpc ListUserAppeals(ListUserAppealsRequest) returns (ListUserAppealsResponse) {
    option (google.api.http) = {get: "/v1beta1/me/appeals"};
  }

  rpc ListAppeals(ListAppealsRequest) returns (ListAppealsResponse) {
    option (google.api.http) = {get: "/v1beta1/appeals"};
  }

  rpc GetAppeal(GetAppealRequest) returns (GetAppealResponse) {
    option (google.api.http) = {get: "/v1beta1/appeals/{id}"};
  }

  rpc CancelAppeal(CancelAppealRequest) returns (CancelAppealResponse) {
    option (google.api.http) = {put: "/v1beta1/appeals/{id}/cancel"};
  }

  rpc CreateAppeal(CreateAppealRequest) returns (CreateAppealResponse) {
    option (google.api.http) = {
      post: "/v1beta1/appeals"
      body: "*"
    };
  }

  rpc ListUserApprovals(ListUserApprovalsRequest) returns (ListUserApprovalsResponse) {
    option (google.api.http) = {get: "/v1beta1/me/approvals"};
  }

  rpc ListApprovals(ListApprovalsRequest) returns (ListApprovalsResponse) {
    option (google.api.http) = {get: "/v1beta1/approvals"};
  }

  rpc UpdateApproval(UpdateApprovalRequest) returns (UpdateApprovalResponse) {
    option (google.api.http) = {
      post: "/v1beta1/appeals/{id}/approvals/{approval_name}"
      body: "action"
    };
  }

  rpc AddApprover(AddApproverRequest) returns (AddApproverResponse) {
    option (google.api.http) = {
      post: "/v1beta1/appeals/{appeal_id}/approvals/{approval_id}/approvers"
      body: "*"
    };
  }

  rpc DeleteApprover(DeleteApproverRequest) returns (DeleteApproverResponse) {
    option (google.api.http) = {delete: "/v1beta1/appeals/{appeal_id}/approvals/{approval_id}/approvers/{email}"};
  }

  rpc ListGrants(ListGrantsRequest) returns (ListGrantsResponse) {
    option (google.api.http) = {get: "/v1beta1/grants"};
  }

  rpc ListUserGrants(ListUserGrantsRequest) returns (ListUserGrantsResponse) {
    option (google.api.http) = {get: "/v1beta1/me/grants"};
  }

  rpc GetGrant(GetGrantRequest) returns (GetGrantResponse) {
    option (google.api.http) = {get: "/v1beta1/grants/{id}"};
  }

  rpc UpdateGrant(UpdateGrantRequest) returns (UpdateGrantResponse) {
    option (google.api.http) = {
      patch: "/v1beta1/grants/{id}"
      body: "*"
    };
  }

  rpc RevokeGrant(RevokeGrantRequest) returns (RevokeGrantResponse) {
    option (google.api.http) = {
      put: "/v1beta1/grants/{id}/revoke"
      body: "*"
    };
  }

  rpc RevokeGrants(RevokeGrantsRequest) returns (RevokeGrantsResponse) {
    option (google.api.http) = {
      put: "/v1beta1/grants/revoke"
      body: "*"
    };
  }

  rpc ImportGrantsFromProvider(ImportGrantsFromProviderRequest) returns (ImportGrantsFromProviderResponse) {
    option (google.api.http) = {
      post: "/v1beta1/grants/import"
      body: "*"
    };
  }

  // Namespace contains information about a tenant
  rpc CreateNamespace(CreateNamespaceRequest) returns (CreateNamespaceResponse) {
    option (google.api.http) = {
      post: "/v1beta1/namespaces"
      body: "*"
    };
  }

  rpc GetNamespace(GetNamespaceRequest) returns (GetNamespaceResponse) {
    option (google.api.http) = {get: "/v1beta1/namespaces/{id}"};
  }

  rpc ListNamespaces(ListNamespacesRequest) returns (ListNamespacesResponse) {
    option (google.api.http) = {get: "/v1beta1/namespaces"};
  }

  rpc UpdateNamespace(UpdateNamespaceRequest) returns (UpdateNamespaceResponse) {
    option (google.api.http) = {
      put: "/v1beta1/namespaces/{id}"
      body: "*"
    };
  }
}

message ListProvidersRequest {}

message ListProvidersResponse {
  repeated Provider providers = 1;
}

message GetProviderRequest {
  string id = 1;
}

message GetProviderResponse {
  Provider provider = 1;
}

message GetProviderTypesRequest {}

message GetProviderTypesResponse {
  repeated ProviderType provider_types = 1;
}

message CreateProviderRequest {
  ProviderConfig config = 1;
  bool dry_run = 2;
}

message CreateProviderResponse {
  Provider provider = 1;
}

message UpdateProviderRequest {
  string id = 1;
  ProviderConfig config = 2;
  bool dry_run = 3;
}

message UpdateProviderResponse {
  Provider provider = 1;
}

message DeleteProviderRequest {
  string id = 1;
}

message DeleteProviderResponse {}

message ImportGrantsFromProviderRequest {
  string provider_id = 1;
  repeated string resource_ids = 2;
  repeated string resource_types = 3;
  repeated string resource_urns = 4;
}

message ImportGrantsFromProviderResponse {
  repeated Grant grants = 1;
}

message ListRolesRequest {
  string id = 1;
  string resource_type = 2;
}

message ListRolesResponse {
  repeated Role roles = 1;
}

message ImportActivitiesRequest {
  string provider_id = 1;
  repeated string account_ids = 2;
  repeated string resource_ids = 3;
  google.protobuf.Timestamp timestamp_gte = 4;
  google.protobuf.Timestamp timestamp_lte = 5;
}

message ImportActivitiesResponse {
  repeated ProviderActivity activities = 1;
}

message GetActivityRequest {
  string id = 1;
}

message GetActivityResponse {
  ProviderActivity activity = 1;
}

message ListActivitiesRequest {
  repeated string provider_ids = 1;
  repeated string account_ids = 2;
  repeated string resource_ids = 3;
  repeated string types = 4;
  google.protobuf.Timestamp timestamp_gte = 5;
  google.protobuf.Timestamp timestamp_lte = 6;
}

message ListActivitiesResponse {
  repeated ProviderActivity activities = 1;
}

message ListPoliciesRequest {}

message ListPoliciesResponse {
  repeated Policy policies = 1;
}

message GetPolicyRequest {
  string id = 1;
  uint32 version = 2;
}

message GetPolicyPreferencesRequest {
  string id = 1;
  uint32 version = 2;
}

message GetPolicyPreferencesResponse {
  PolicyAppealConfig appeal = 1;
}

message GetPolicyResponse {
  Policy policy = 1;
}

message CreatePolicyRequest {
  Policy policy = 1;
  bool dry_run = 2;
}

message CreatePolicyResponse {
  Policy policy = 1;
}

message UpdatePolicyRequest {
  string id = 1;
  Policy policy = 2;
  bool dry_run = 3;
}

message UpdatePolicyResponse {
  Policy policy = 1;
}

message ListResourcesRequest {
  bool is_deleted = 1;
  string provider_type = 2;
  string provider_urn = 3;
  string type = 4;
  string urn = 5;
  string name = 6;
  repeated string details = 7;
}

message ListResourcesResponse {
  repeated Resource resources = 1;
}

message GetResourceRequest {
  string id = 1;
}

message GetResourceResponse {
  Resource resource = 1;
}

message UpdateResourceRequest {
  string id = 1;
  Resource resource = 2;
}

message UpdateResourceResponse {
  Resource resource = 1;
}

message DeleteResourceRequest {
  string id = 1;
}

message DeleteResourceResponse {}

message ListUserAppealsRequest {
  repeated string statuses = 1;
  string role = 2;
  repeated string provider_types = 3;
  repeated string provider_urns = 4;
  repeated string resource_types = 5;
  repeated string resource_urns = 6;
  repeated string order_by = 7;
}

message ListUserAppealsResponse {
  repeated Appeal appeals = 1;
}

message ListAppealsRequest {
  string account_id = 1;
  repeated string statuses = 2;
  string role = 3;
  repeated string provider_types = 4;
  repeated string provider_urns = 5;
  repeated string resource_types = 6;
  repeated string resource_urns = 7;
  repeated string order_by = 8;
  string created_by = 9;
}

message ListAppealsResponse {
  repeated Appeal appeals = 1;
}

message GetAppealRequest {
  string id = 1;
}

message GetAppealResponse {
  Appeal appeal = 1;
}

message CancelAppealRequest {
  string id = 1;
}

message CancelAppealResponse {
  Appeal appeal = 1;
}

message RevokeAppealRequest {
  string id = 1;

  message Reason {
    string reason = 1;
  }
  Reason reason = 2;
}

message RevokeAppealResponse {
  Appeal appeal = 1;
}

message RevokeAppealsRequest {
  repeated string account_ids = 1;
  repeated string provider_types = 2;
  repeated string provider_urns = 3;
  repeated string resource_types = 4;
  repeated string resource_urns = 5;
  string reason = 6;
}

message RevokeAppealsResponse {
  repeated Appeal appeals = 1;
}

message CreateAppealRequest {
  string account_id = 1;

  message Resource {
    string id = 1;
    string role = 2;
    google.protobuf.Struct options = 3;
    google.protobuf.Struct details = 4;
  }
  repeated Resource resources = 2;
  string account_type = 3;
  string description = 4;
}

message CreateAppealResponse {
  repeated Appeal appeals = 1;
}

message ListUserApprovalsRequest {
  repeated string statuses = 2;
  repeated string order_by = 3;
  string account_id = 4;
  uint32 size = 5 [(validate.rules).uint32 = {
    gte: 0,
    ignore_empty: true
  }];
  uint32 offset = 6 [(validate.rules).uint32 = {
    gte: 0,
    ignore_empty: true
  }];
  repeated string appeal_statuses = 7;
  string q = 8;
  repeated string account_types = 9;
  repeated string resource_types = 10;
}

message ListUserApprovalsResponse {
  repeated Approval approvals = 1;
  int32 total = 2;
}

message ListApprovalsRequest {
  string account_id = 1;
  repeated string statuses = 2;
  repeated string order_by = 3;
  string created_by = 4;
  uint32 size = 5 [(validate.rules).uint32 = {
    gte: 0,
    ignore_empty: true
  }];
  uint32 offset = 6 [(validate.rules).uint32 = {
    gte: 0,
    ignore_empty: true
  }];
  repeated string appeal_statuses = 7;
  string q = 8;
  repeated string account_types = 9;
  repeated string resource_types = 10;
}

message ListApprovalsResponse {
  repeated Approval approvals = 1;
  int32 total = 2;
}

message UpdateApprovalRequest {
  string id = 1;
  string approval_name = 2;

  message Action {
    string action = 1;
    string reason = 2;
  }
  Action action = 3;
}

message UpdateApprovalResponse {
  Appeal appeal = 1;
}

message AddApproverRequest {
  string appeal_id = 1;
  string approval_id = 2;
  string email = 3;
}

message AddApproverResponse {
  Appeal appeal = 1;
}

message DeleteApproverRequest {
  string appeal_id = 1;
  string approval_id = 2;
  string email = 3;
}

message DeleteApproverResponse {
  Appeal appeal = 1;
}

message ListGrantsRequest {
  repeated string statuses = 1;
  repeated string account_ids = 2;
  repeated string account_types = 3;
  repeated string resource_ids = 4;
  repeated string provider_types = 5;
  repeated string provider_urns = 6;
  repeated string resource_types = 7;
  repeated string resource_urns = 8;
  repeated string roles = 9;
  string created_by = 10;
  repeated string order_by = 11;
  string owner = 12;
}

message ListGrantsResponse {
  repeated Grant grants = 1;
}

message ListUserGrantsRequest {
  repeated string statuses = 1;
  repeated string account_ids = 2;
  repeated string account_types = 3;
  repeated string resource_ids = 4;
  repeated string provider_types = 5;
  repeated string provider_urns = 6;
  repeated string resource_types = 7;
  repeated string resource_urns = 8;
  repeated string roles = 9;
  repeated string order_by = 10;
}

message ListUserGrantsResponse {
  repeated Grant grants = 1;
}

message GetGrantRequest {
  string id = 1;
}

message GetGrantResponse {
  Grant grant = 1;
}

message UpdateGrantRequest {
  string id = 1;
  string owner = 2;
}

message UpdateGrantResponse {
  Grant grant = 1;
}

message RevokeGrantRequest {
  string id = 1;
  string reason = 2;
}

message RevokeGrantResponse {
  Grant grant = 1;
}

message RevokeGrantsRequest {
  repeated string account_ids = 1;
  repeated string provider_types = 2;
  repeated string provider_urns = 3;
  repeated string resource_types = 4;
  repeated string resource_urns = 5;
  string reason = 6;
}

message RevokeGrantsResponse {
  repeated Grant grants = 1;
}

message Role {
  string id = 1;
  string name = 2;
  string description = 3;
  repeated google.protobuf.Value permissions = 4;
}

message PolicyConfig {
  string id = 1;
  int32 version = 2;
}

message ProviderConfig {
  string type = 1;
  string urn = 2;
  map<string, string> labels = 3;
  google.protobuf.Value credentials = 4;

  message AppealConfig {
    bool allow_permanent_access = 1;
    string allow_active_access_extension_in = 2;
  }
  AppealConfig appeal = 5;

  message ResourceConfig {
    string type = 1;
    PolicyConfig policy = 2;
    repeated Role roles = 4;
    string filter = 5;
  }
  repeated ResourceConfig resources = 6;
  repeated string allowed_account_types = 7;
  message ProviderParameter {
    string key = 1;
    string label = 2;
    bool required = 3;
    string description = 4;
  }
  repeated ProviderParameter parameters = 8;
}

// Provider contains information about external data provider such as BigQuery, Metabase, etc., credentials, policy, and allowed roles
message Provider {
  string id = 1;
  string type = 2;
  string urn = 3;

  ProviderConfig config = 4;

  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message ProviderType {
  string name = 1;
  repeated string resource_types = 2;
}

message Condition {
  string field = 1;

  message MatchCondition {
    google.protobuf.Value eq = 1;
  }
  MatchCondition match = 2;
}

message PolicyAppealConfig {
  message DurationOptions {
    string name = 1 [
      (google.api.field_behavior) = REQUIRED,
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Name of the duration option"
      }
    ];
    string value = 2 [
      (google.api.field_behavior) = REQUIRED,
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Actual value of duration such as 24h, 72h. value will be 0h in case of permanent duration. Valid time units are ns, us (or µs). Reference: [ParseDuration](https://pkg.go.dev/time#ParseDuration)"
      }
    ];
  }
  repeated DurationOptions duration_options = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "List of duration options"
    }
  ];
  bool allow_on_behalf = 2;
  bool allow_permanent_access = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Set this to true if you want to allow users to have permanent access to the resources. Default is false"
    }
  ];
  string allow_active_access_extension_in = 4 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Duration before the access expiration date when the user allowed to create appeal to the same resource (extend their current access). Valid time units are ns, us (or µs), ms, s, m, h"
    }
  ];
  message Question {
    string key = 1 [
      (google.api.field_behavior) = REQUIRED,
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Unique key of the question"
      }
    ];
    string question = 2 [ 
      (google.api.field_behavior) = REQUIRED,
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Question to be asked to the appeal creator"
      }
    ];
    bool required = 3 [ 
      (google.api.field_behavior) = REQUIRED,
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Whether the question is required or not"
      }
    ];
    string description = 4 [
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "The description to be shown to the appeal creator"
      }
    ];
  }
  repeated Question questions = 5 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "List of questions to be asked to the appeal creator"
    }
  ];
  bool allow_creator_details_failure = 6;
}

// Policy is a configurable steps for appeal's approval
message Policy {
  string id = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Policy unique identifier"
      example: "\"f4b7a3c0-9f9b-4b9b-9b0a-9e4b1a1b1b1b\""
    }];
  uint32 version = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Policy version. Auto-incremented when policy is updated"
      example: "1"
    }];
  string description = 3;

  message ApprovalStep {
    string name = 1 [
      (google.api.field_behavior) = REQUIRED,
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Approval step identifier"
        example: "\"Step 1\""
      }
    ];
    string description = 2 [
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Approval step description"
        example: "\"Step 1 description\""
      }
    ];
    bool allow_failed = 3 [
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "If set true, and current step is rejected, it will mark the appeal status as skipped instead of rejected"
        example: "true"
      }
    ];
    string when = 4 [
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Determines whether the step should be evaluated or it can be skipped. If it evaluates to be falsy, the step will automatically skipped. Otherwise, step become pending/blocked (normal)."
      }
    ];
    string strategy = 5 [
      (google.api.field_behavior) = REQUIRED,
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Execution behaviour of the step. Possible values are `auto` or `manual`"
        example: "\"auto\""
      }
    ];
    string approve_if = 6 [
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Determines the automatic resolution of current step when strategy is `auto`. Required when strategy is `auto`"
      }
    ];
    repeated string approvers = 7 [
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "List of email or Expression string. The Expression is expected to return an email address or list of email addresses. Required when strategy is `manual`"
      }
    ];
    string rejection_reason = 8 [
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "This fills `Approval.Reason` if current approval step gets rejected based on `ApproveIf` expression. If strategy is manual, this field ignored."
      }
    ];
  }
  // add description
  repeated ApprovalStep steps = 4 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Sequence of approval steps. Each step can have different approval strategy and approvers"
    }];

  map<string, string> labels = 5;
  google.protobuf.Timestamp created_at = 6 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Policy creation timestamp"
      example: "\"2023-06-07T05:39:56.961Z\""
    }
  ];
  google.protobuf.Timestamp updated_at = 7 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Policy last update timestamp"
      example: "\"2023-06-07T05:39:56.961Z\""
    }
  ];

  message Requirement {
    message RequirementTrigger {
      string provider_type = 1 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          description: "Criteria for the provider type of the current appeal's selected resource. Regex supported"
        }
      ];
      string provider_urn = 2 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          description: "Criteria for the provider URN of the current appeal's selected resource. Regex supported"
        }
      ];
      string resource_type = 3 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          description: "Criteria for the resource type of the current appeal's selected resource. Regex supported"
        }
      ];
      string resource_urn = 4 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          description: "Criteria for the resource URN of the current appeal's selected resource. Regex supported"
        }
      ];
      string role = 5 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          description: "Criteria for the role of the current appeal. Regex supported"
        }
      ];
      repeated Condition conditions = 6;
      string expression = 7;
    }
    RequirementTrigger on = 1 [
      (google.api.field_behavior) = REQUIRED,
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Requirement trigger. If the trigger is matched, the requirement will be evaluated"
      }
    ];

    message AdditionalAppeal {
      message ResourceIdentifier {
        string provider_type = 1;
        string provider_urn = 2;
        string type = 3;
        string urn = 4;
        string id = 5;
      }
      ResourceIdentifier resource = 1;
      string role = 2;
      AppealOptions options = 3;
      PolicyConfig policy = 4;
    }
    repeated AdditionalAppeal appeals = 2;
  }
  repeated Requirement requirements = 8;

  message IAM {
    string provider = 1 [
      (google.api.field_behavior) = REQUIRED,
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Identity manager type. Supported types are http and frontier"
        example: "\"bigquery\""
      }
    ];
    google.protobuf.Value config = 2 [
      (google.api.field_behavior) = REQUIRED,
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Client configuration according to the provider type"
      }
    ];
    map<string, string> schema = 3 [
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "User (appeal creator) profile details schema to be shown in the creator field in an appeal"
      }
    ];
  }
  IAM iam = 9;

  PolicyAppealConfig appeal = 10;
}

message AppealOptions {
  google.protobuf.Timestamp expiration_date = 1; // optional
  string duration = 2;
}

// Appeal is created by user to get access to one or more resources
message Appeal {
  reserved 14, 15, 16;
  string id = 1;
  string resource_id = 2;
  string policy_id = 3;
  uint32 policy_version = 4;
  string status = 5;
  string account_id = 6;
  string role = 7;

  AppealOptions options = 8; // optional

  map<string, string> labels = 9;
  Resource resource = 10; // optional
  repeated Approval approvals = 11;

  google.protobuf.Timestamp created_at = 12;
  google.protobuf.Timestamp updated_at = 13;

  google.protobuf.Struct details = 17;
  string account_type = 18;
  string created_by = 19;
  google.protobuf.Value creator = 20;
  repeated string permissions = 21;
  Grant grant = 22;
  string description = 23;
}

// Approval is an approval item that generated in an appeal based on the selected policy
message Approval {
  string id = 1;
  string name = 2;
  string appeal_id = 3;
  string status = 4;
  string actor = 5;
  string policy_id = 6;
  uint32 policy_version = 7;
  repeated string approvers = 8;
  Appeal appeal = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
  string reason = 12;
}

// Resource contains information of resource from providers
message Resource {
  string id = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Resource unique identifier"
      example: "\"f4b7a3c0-9f9b-4b9b-9b0a-9e4b1a1b1b1b\""
    }
  ];
  string provider_type = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Type of the provider that manages this resource"
      example: "\"bigquery\""
    }
  ];
  string provider_urn = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique resource urn"
      example: "\"my-bq\""
    }
  ];
  string type = 4 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Type of the resource. Depends on the provider type. For example, for BigQuery, it can be dataset, table, view, etc."
      example: "\"table\""
    }
  ];
  string urn = 5 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique resource urn"
    }
  ];
  string name = 6;
  google.protobuf.Struct details = 7 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Additional information of the resource that can be updated from Guardian"
    }
  ];
  map<string, string> labels = 8;
  google.protobuf.Timestamp created_at = 9 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Resource creation timestamp"
      example: "\"2023-06-07T05:39:56.961Z\""
    }
  ];
  google.protobuf.Timestamp updated_at = 10 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Resource last update timestamp"
      example: "\"2023-06-07T05:39:56.961Z\""
    }
  ];
  bool is_deleted = 11 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Whether the resource is deleted or not"
    }
  ];
  string parent_id = 12 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Parent resource id"
    }
  ];
  repeated Resource children = 13 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "List of child resources"
    }
  ];
}

message Grant {
  string id = 1;
  string status = 2;
  string account_id = 3;
  string account_type = 4;
  string resource_id = 5;
  string role = 6;
  repeated string permissions = 7;
  google.protobuf.Timestamp expiration_date = 8;
  string appeal_id = 9;
  string revoked_by = 10;
  google.protobuf.Timestamp revoked_at = 11;
  string revoke_reason = 12;
  string created_by = 13;
  google.protobuf.Timestamp created_at = 14;
  google.protobuf.Timestamp updated_at = 15;

  Resource resource = 16;
  Appeal appeal = 17;
  bool is_permanent = 18;
  string source = 19;
  string status_in_provider = 20;
  string owner = 21;
}

message ProviderActivity {
  string id = 1;
  string provider_id = 2;
  string resource_id = 3;
  string account_id = 4;
  string account_type = 5;
  google.protobuf.Timestamp timestamp = 6;
  repeated string authorizations = 7;
  string type = 8;
  google.protobuf.Struct metadata = 9;
  google.protobuf.Timestamp created_at = 10;
  Provider provider = 11;
  Resource resource = 12;
  string provider_activity_id = 13;
  repeated string related_permissions = 14;
}

message Namespace {
  string id = 1;
  string name = 2;
  string state = 3;
  google.protobuf.Struct metadata = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message CreateNamespaceRequest {
  Namespace namespace = 1;
}

message CreateNamespaceResponse {}

message GetNamespaceRequest {
  string id = 1;
}

message GetNamespaceResponse {
  Namespace namespace = 1;
}

message ListNamespacesRequest {}

message ListNamespacesResponse {
  repeated Namespace namespaces = 1;
}

message UpdateNamespaceRequest {
  string id = 1;
  Namespace namespace = 2;
}

message UpdateNamespaceResponse {}

