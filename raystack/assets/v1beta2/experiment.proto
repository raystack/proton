syntax = "proto3";

package raystack.assets.v1beta2;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/raystack/proton/assets/v1beta2;assetsv1beta2";
option java_outer_classname = "ExperimentProto";
option java_package = "io.raystack.assets";

// An experiment is the set of configurations and filters that allow for
// systematically varying some independent variables to impact some other
// dependent variables.
message Experiment {
  // Instance of configurations to be compared in the experiment.
  message Variant {
    // Name of the experiment variant.
    string name = 1;

    // Traffic percent enabled for the variant.
    float traffic_percent = 2;

    // Indicated whether the variant is the control for the experiment.
    bool is_control = 3;

    // List of properties the entity has.
    google.protobuf.Struct attributes = 4;

    // Whether the variant has been promoted to all users.
    bool is_promoted = 5;
  }

  // Optional: Type of the entity being experimented over. ex: customer, session,
  // device, driver etc.
  string entity = 1;

  // Optional: Percentage of the traffic that the experiment is enabled for.
  float traffic_percent = 2;

  // The variants of the experiment possibly including the control group.
  repeated Variant variants = 3;

  // Optional: List of attributes the experiment has. This could include the
  // following:
  // - client_id[string]: The ID if the client running the experiment.
  // - client_name[string]: The name of the client running the experiment.
  // - primary_metric[string]: Used to determine a statistically significant
  //   winning or losing variant.
  // - guardrail_metric[string]: Business metric designed to indirectly measure
  //   business value and track any potentially misleading or erroneous results
  //   and analysis.
  // - variant_sample_size[double]: Sample size per variant.
  // - filter_rules[repeated string]: Textual representation of rules required
  //   to be satisfied for experiment to be shown to the user.
  // - start_time[RFC 3339 string]: The timestamp at which the
  //   experiment would start.
  // - end_time[RFC 3339 string]: The timestamp at which the
  //   experiment would end.
  google.protobuf.Struct attributes = 5;

  // The timestamp of the experiment's creation.
  google.protobuf.Timestamp create_time = 101;

  // The timestamp when the experiment was last modified.
  google.protobuf.Timestamp update_time = 102;
}
