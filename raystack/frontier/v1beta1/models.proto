syntax = "proto3";

package raystack.frontier.v1beta1;

import "google/api/field_behavior.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/raystack/proton/frontier/v1beta1;frontierv1beta1";
option java_outer_classname = "Frontier";
option java_package = "io.raystack.proton.frontier.v1beta1";

message User {
  string id = 1;
  // can either be empty or must start with a character
  string name = 2 [
    (validate.rules).string = {pattern: "^([a-zA-Z][a-zA-Z0-9-_]{3,64})?$"},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique name of the user.",
      example: "\"johndoe\""
    }
  ];
  string title = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Name of the user.",
    example: "\"John Doe\""
  }];
  string email = 4 [(validate.rules).string.email = true];
  google.protobuf.Struct metadata = 5;
  google.protobuf.Timestamp created_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the user was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  google.protobuf.Timestamp updated_at = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the user was last updated.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  string state = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The state of the user (enabled or disabled).",
    example: "\"enabled\""
  }];
  string avatar = 9 [
    (validate.rules).string = {
      pattern: "^data:image/(png|jpg|jpeg|gif);base64,([A-Za-z0-9+/=]|\\s)+$"
      max_len: 250000
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The base64 encoded image string of the user avatar. Should be less than 2MB."}
  ];
}

message ServiceUser {
  reserved 2; // 2: for name if needed
  string id = 1;
  string title = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "User friendly name of the service user.",
    example: "\"Order Service\""
  }];
  google.protobuf.Struct metadata = 4;
  google.protobuf.Timestamp created_at = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the user was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  google.protobuf.Timestamp updated_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the user was last updated.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  string state = 7;
  string org_id = 8;
}

message Group {
  string id = 1;
  string name = 2 [(validate.rules).string = {
    min_len: 2,
    pattern: "^[A-Za-z0-9-_]+$"
  }];
  string title = 3;
  string org_id = 4;
  google.protobuf.Struct metadata = 5;
  google.protobuf.Timestamp created_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the group was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  google.protobuf.Timestamp updated_at = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the group was last updated.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];

  repeated User users = 10 [(google.api.field_behavior) = OUTPUT_ONLY];
  int32 members_count = 8 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The number of members explicitly added in the project.",
      example: "2"
    },
    (google.api.field_behavior) = OUTPUT_ONLY
  ];
}

message Role {
  reserved 8;

  string id = 1;
  string name = 2 [(validate.rules).string = {
    min_len: 2,
    pattern: "^[A-Za-z0-9-_]+$"
  }];
  repeated string permissions = 3;
  string title = 4;
  google.protobuf.Struct metadata = 5;
  google.protobuf.Timestamp created_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the role was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  google.protobuf.Timestamp updated_at = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the role was last updated.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  string org_id = 9;
  string state = 10;
  repeated string scopes = 11;
}

message Organization {
  string id = 1;
  string name = 2 [(validate.rules).string = {
    min_len: 2,
    pattern: "^[A-Za-z0-9-_]+$"
  }];
  string title = 3;
  google.protobuf.Struct metadata = 4;
  google.protobuf.Timestamp created_at = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the organization was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  google.protobuf.Timestamp updated_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the organization was last updated.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  string state = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The state of the organization (enabled or disabled).",
    example: "\"enabled\""
  }];
  string avatar = 8 [
    (validate.rules).string = {
      pattern: "^data:image/(png|jpg|jpeg|gif);base64,([A-Za-z0-9+/=]|\\s)+$"
      max_len: 250000
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The base64 encoded image string of the organization avatar. Should be less than 2MB."}
  ];
}

message OrganizationKyc {
  string org_id = 1;
  bool status = 2;
  string link = 3;
  google.protobuf.Timestamp created_at = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the organization kyc was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  google.protobuf.Timestamp updated_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the organization kyc was last updated.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
}

message Project {
  string id = 1;
  string name = 2 [(validate.rules).string = {
    min_len: 2,
    pattern: "^[A-Za-z0-9-_]+$"
  }];
  string title = 3;
  string org_id = 4;
  google.protobuf.Struct metadata = 5;
  google.protobuf.Timestamp created_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the project was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  google.protobuf.Timestamp updated_at = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the project was last updated.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];

  int32 members_count = 8 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The number of members explicitly added in the project.",
      example: "2"
    },
    (google.api.field_behavior) = OUTPUT_ONLY
  ];
}

message Domain {
  string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The domain id",
    example: "\"943e4567-e89b-12d3-a456-426655440000\""
  }];
  string name = 2 [
    (validate.rules).string = {min_len: 2},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The domain name",
      example: "\"raystack.org\""
    }
  ];
  string org_id = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The organization id",
    example: "\"123e4567-e89b-12d3-a456-426655440000\""
  }];
  string token = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The dns TXT record token to verify the domain",
    example: "\"_frontier-domain-verification=LB6U2lSQgGS55HOy6kpWFqkngRC8TMEjyrakfmYC2D0s+nfy/WkFSg==\""
  }];
  string state = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The domain state either pending or verified",
    example: "\"pending\""
  }];
  google.protobuf.Timestamp created_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the domain whitelist request was created",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  google.protobuf.Timestamp updated_at = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the org domain was updated",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
}

message Policy {
  reserved 3, 4, 7, 9;

  string id = 1;
  string title = 2;
  google.protobuf.Timestamp created_at = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the policy was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  google.protobuf.Timestamp updated_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the policy was last updated.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];

  string role_id = 8;
  // namespace:uuid
  string resource = 10;
  // namespace:uuid
  string principal = 11;
  google.protobuf.Struct metadata = 12;
}

message Relation {
  reserved 2, 3, 4, 5, 8;

  string id = 1;
  google.protobuf.Timestamp created_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the relation was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  google.protobuf.Timestamp updated_at = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the relation was last updated.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  string subject_sub_relation = 9;
  string relation = 10;

  // objectnamespace:id
  string object = 11;
  // subjectnamespace:id
  string subject = 12;
}

message Permission {
  string id = 1;
  string name = 2 [
    (validate.rules).string = {
      min_len: 2,
      pattern: "^[A-Za-z0-9]+$"
    },
    deprecated = true
  ];
  string title = 3;
  google.protobuf.Timestamp created_at = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the permission was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  google.protobuf.Timestamp updated_at = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the permission was last updated.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  string namespace = 6 [deprecated = true];
  google.protobuf.Struct metadata = 7;
  string key = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Permission path key is composed of three parts, 'service.resource.verb'. Where 'service.resource' works as a namespace for the 'verb'.",
    example: "\"compute.instance.get\""
  }];
}

message Namespace {
  reserved 4, 5;

  string id = 1;
  // name could be in a format like: app/organization
  string name = 2 [(validate.rules).string.pattern = "^[A-Za-z0-9/]+$"];
  google.protobuf.Struct metadata = 3;
  google.protobuf.Timestamp created_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the namespace was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  google.protobuf.Timestamp updated_at = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the namespace was last updated.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
}

message Resource {
  reserved 3, 4, 5, 8;

  string id = 1;
  string name = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Name of the resource. Must be unique within the project."}];
  google.protobuf.Timestamp created_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the resource was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  google.protobuf.Timestamp updated_at = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the resource was last updated.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  string urn = 9;
  string project_id = 10;
  string namespace = 11;
  string principal = 12;
  google.protobuf.Struct metadata = 13;
  string title = 14;
}

message MetaSchema {
  string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The unique metaschema uuid.",
    example: "\"a9c4f4e2-9b9a-4c1a-8f1a-2b9b9b9b9b9b\""
  }];
  string name = 2 [(validate.rules).string = {
    min_len: 2,
    pattern: "^[A-Za-z0-9-_]+$"
  }];
  string schema = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The metaschema json schema.",
    example: "{\"type\": \"object\"}"
  }];
  google.protobuf.Timestamp created_at = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time when the metaschema was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  google.protobuf.Timestamp updated_at = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time when the metaschema was updated.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
}

message Invitation {
  string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The unique invitation identifier.",
    example: "\"k9c4f4e2-9b9a-4c1a-8f1a-2b9b9b9b9b9b\""
  }];
  string user_id = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The user email of the invited user.",
    example: "\"john.doe@raystack.org\""
  }];
  string org_id = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The organization id to which the user is invited.",
    example: "\"b9c4f4e2-9b9a-4c1a-8f1a-2b9b9b9b9b9b\""
  }];
  repeated string group_ids = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The list of group ids to which the user is invited.",
    example: "\"c9c4f4e2-9b9a-4c1a-8f1a-2b9b9b9b9b9b\""
  }];
  google.protobuf.Struct metadata = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The metadata of the invitation.",
    example: "{\"key\": \"value\"}"
  }];
  google.protobuf.Timestamp created_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time when the invitation was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  google.protobuf.Timestamp expires_at = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time when the invitation expires.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  repeated string role_ids = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The list of role ids to which the user is invited in an organization.",
    example: "\"d9c4f4e2-9b9a-4c1a-8f1a-2b9b9b9b9b9b\""
  }];
}

message ServiceUserJWK {
  string id = 1;
  string title = 2;
  string principal_id = 3;
  string public_key = 4 [(google.api.field_behavior) = OUTPUT_ONLY];

  google.protobuf.Timestamp created_at = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time when the secret was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
}

message KeyCredential {
  string type = 1;
  string kid = 2;
  string principal_id = 3;

  // RSA private key as string
  string private_key = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message SecretCredential {
  string id = 1;
  string title = 2;

  // secret will only be returned once as part of the create process
  // this value is never persisted in the system so if lost, can't be recovered
  string secret = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

  google.protobuf.Timestamp created_at = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time when the secret was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
}

message ServiceUserToken {
  string id = 1;
  string title = 2;

  // token will only be returned once as part of the create process
  // this value is never persisted in the system so if lost, can't be recovered
  string token = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

  google.protobuf.Timestamp created_at = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time when the token was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
}

// JSON Web Key as specified in RFC 7517
message JSONWebKey {
  // Key Type.
  string kty = 1;

  // Algorithm.
  string alg = 2;

  // Permitted uses for the public keys.
  string use = 3;

  // Key ID.
  string kid = 4;

  // Used for RSA keys.
  string n = 5;

  // Used for RSA keys.
  string e = 6;

  // Used for ECDSA keys.
  string x = 7;

  // Used for ECDSA keys.
  string y = 8;

  // Used for ECDSA keys.
  string crv = 9;
}

// Audit log

message AuditLogActor {
  string id = 1;
  string type = 2;
  string name = 3;
}

message AuditLogTarget {
  string id = 1;
  string type = 2;
  string name = 3;
}

message AuditLog {
  // A unique identifier of the audit log if not supplied will be autogenerated
  string id = 1;

  // Source service generating the event
  string source = 2 [
    (validate.rules).string = {min_len: 2},
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The source service generating the event.",
      example: "\"auth\""
    }
  ];

  // Action performed, e.g. project.create, user.update, serviceuser.delete
  string action = 3 [
    (validate.rules).string = {min_len: 2},
    (google.api.field_behavior) = REQUIRED
  ];

  // Actor performing the action
  AuditLogActor actor = 4;

  // Target of the action
  AuditLogTarget target = 5;

  // Context contains additional information about the event
  map<string, string> context = 6;

  google.protobuf.Timestamp created_at = 20 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the log was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
}

// PreferenceTrait is a trait that can be used to add preferences to a resource
// it explains what preferences are available for a resource
message PreferenceTrait {
  string resource_type = 1;
  string name = 2;
  string title = 3;
  string description = 4;
  string long_description = 5;
  string heading = 6;
  string sub_heading = 7;
  string breadcrumb = 8;
  string default = 9;

  string input_hints = 19;
  oneof input {
    string text = 20;
    string textarea = 21;
    string select = 22;
    string combobox = 23;
    string checkbox = 24;
    string multiselect = 25;
    string number = 26;
  }
}

message Preference {
  string id = 1;
  string name = 2;
  string value = 3;
  string resource_id = 4;
  string resource_type = 5;

  google.protobuf.Timestamp created_at = 10 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time when the preference was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
  google.protobuf.Timestamp updated_at = 11 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time when the preference was updated.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
}

message BillingAccount {
  message Address {
    string line1 = 1;
    string line2 = 2;
    string city = 3;
    string state = 4;
    string postal_code = 5;
    string country = 6;
  }

  message Tax {
    // tax type like "vat", "gst", "sales_tax" or if it's
    // provider specific us_ein, uk_vat, in_gst, etc
    string type = 1;
    // unique identifier provided by the tax agency
    string id = 2;
  }

  message Balance {
    int64 amount = 1;
    string currency = 2;

    google.protobuf.Timestamp updated_at = 3;
  }

  string id = 1;
  string org_id = 2;

  string name = 3;
  string email = 4;
  string phone = 5;
  Address address = 6;
  string provider_id = 7;
  string provider = 8;
  string currency = 9;
  string state = 10;
  repeated Tax tax_data = 11;

  google.protobuf.Struct metadata = 20;
  google.protobuf.Timestamp created_at = 21;
  google.protobuf.Timestamp updated_at = 22;

  Organization organization = 101 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message Subscription {
  reserved 9;

  string id = 1;
  string customer_id = 2;
  string provider_id = 3;
  string plan_id = 4;

  string state = 5;

  google.protobuf.Struct metadata = 10;
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
  google.protobuf.Timestamp canceled_at = 13;
  google.protobuf.Timestamp ended_at = 14;
  google.protobuf.Timestamp trial_ends_at = 15;
  google.protobuf.Timestamp current_period_start_at = 16;
  google.protobuf.Timestamp current_period_end_at = 17;
  google.protobuf.Timestamp billing_cycle_anchor_at = 18;

  message Phase {
    google.protobuf.Timestamp effective_at = 1;
    string plan_id = 2;
    string reason = 3;
  }
  repeated Phase phases = 20;

  BillingAccount customer = 101 [(google.api.field_behavior) = OUTPUT_ONLY];
  Plan plan = 102 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message CheckoutSession {
  string id = 1;

  string checkout_url = 2;
  string success_url = 3;
  string cancel_url = 4;
  string state = 5;

  string plan = 6;
  string product = 7;

  google.protobuf.Struct metadata = 10;
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
  google.protobuf.Timestamp expire_at = 13;
}

message Plan {
  string id = 1;
  string name = 2;
  string title = 3;
  string description = 4;
  repeated Product products = 5;
  // known intervals are "day", "week", "month", and "year"
  string interval = 6 [(validate.rules).string = {
    in: [
      "day",
      "week",
      "month",
      "year"
    ]
  }];
  int64 on_start_credits = 7 [(validate.rules).int64 = {gte: 0}];
  int64 trial_days = 8 [(validate.rules).int64 = {gte: 0}];

  google.protobuf.Struct metadata = 20;
  google.protobuf.Timestamp created_at = 21;
  google.protobuf.Timestamp updated_at = 22;
}

message Product {
  reserved 8;
  message BehaviorConfig {
    int64 credit_amount = 1;
    int64 seat_limit = 2;
    int64 min_quantity = 3 [(validate.rules).int64 = {gte: 0}];
    int64 max_quantity = 4 [(validate.rules).int64 = {gte: 0}];
  }

  string id = 1;
  string name = 2;
  string title = 3;
  string description = 4;
  repeated string plan_ids = 5;
  string state = 6;

  repeated Price prices = 7;
  string behavior = 9 [(validate.rules).string = {
    ignore_empty: true,
    in: [
      "basic",
      "credits",
      "per_seat"
    ]
  }];
  repeated Feature features = 10;
  BehaviorConfig behavior_config = 11;

  google.protobuf.Struct metadata = 20;
  google.protobuf.Timestamp created_at = 21;
  google.protobuf.Timestamp updated_at = 22;
}

message Feature {
  string id = 1;
  // machine friendly name
  string name = 2;

  repeated string product_ids = 3;

  // human friendly name
  string title = 4;

  google.protobuf.Struct metadata = 20;
  google.protobuf.Timestamp created_at = 21;
  google.protobuf.Timestamp updated_at = 22;
}

message Price {
  string id = 1;
  string product_id = 2;
  string provider_id = 3;
  string name = 4;

  // known intervals are "day", "week", "month", and "year"
  string interval = 6 [(validate.rules).string = {
    in: [
      "day",
      "week",
      "month",
      "year"
    ]
  }];

  // usage_type known types are "licensed" and "metered"
  string usage_type = 7 [(validate.rules).string = {
    ignore_empty: true,
    in: [
      "licensed",
      "metered"
    ]
  }];
  // billing_scheme known schemes are "tiered" and "flat"
  string billing_scheme = 8 [(validate.rules).string = {
    ignore_empty: true,
    in: [
      "tiered",
      "flat"
    ]
  }];
  string state = 9;
  // currency like "usd", "eur", "gbp"
  string currency = 10;
  int64 amount = 11 [(validate.rules).int64 = {gte: 0}];
  // metered_aggregate known aggregations are "sum", "last_during_period" and "max"
  string metered_aggregate = 13 [(validate.rules).string = {
    ignore_empty: true,
    in: [
      "sum",
      "max",
      "last_during_period"
    ]
  }];
  // tier_mode known modes are "graduated" and "volume"
  string tier_mode = 14 [(validate.rules).string = {
    ignore_empty: true,
    in: [
      "graduated",
      "volume"
    ]
  }];

  google.protobuf.Struct metadata = 20;
  google.protobuf.Timestamp created_at = 21;
  google.protobuf.Timestamp updated_at = 22;
}

message BillingTransaction {
  string id = 1 [(validate.rules).string.uuid = true];
  string customer_id = 2;
  // additional metadata for storing event/service that triggered this usage
  string source = 3;
  int64 amount = 4 [(validate.rules).int64 = {gte: 0}];
  string type = 5 [(validate.rules).string = {
    ignore_empty: true,
    in: [
      "credit",
      "debit"
    ]
  }];
  string description = 6;

  // user_id is the user that triggered this usage
  string user_id = 7;

  google.protobuf.Struct metadata = 20;
  google.protobuf.Timestamp created_at = 21;
  google.protobuf.Timestamp updated_at = 22;

  User user = 101 [(google.api.field_behavior) = OUTPUT_ONLY];
  BillingAccount customer = 102 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message Usage {
  // uuid used as an idempotent key
  string id = 1 [(validate.rules).string.uuid = true];
  string customer_id = 2;
  // additional metadata for storing event/service that triggered this usage
  string source = 3;
  string description = 4;

  // Type is the type of usage, it can be credit or feature
  // if credit, the amount is the amount of credits that were consumed
  // if feature, the amount is the amount of features that were used
  string type = 5 [(validate.rules).string = {
    ignore_empty: true,
    in: [
      "credit",
      "feature"
    ]
  }];
  int64 amount = 6 [(validate.rules).int64 = {gt: 0}];

  // user_id is the user that triggered this usage
  string user_id = 7;

  google.protobuf.Struct metadata = 20;
  google.protobuf.Timestamp created_at = 21;
  google.protobuf.Timestamp updated_at = 22;
}

message Invoice {
  string id = 1;
  string customer_id = 2;
  string provider_id = 3;
  string state = 4;
  string currency = 5;
  int64 amount = 6;
  string hosted_url = 7;

  // The date on which payment for this invoice is due
  google.protobuf.Timestamp due_date = 8;
  // The date when this invoice is in effect.
  google.protobuf.Timestamp effective_at = 9;
  google.protobuf.Timestamp period_start_at = 10;
  google.protobuf.Timestamp period_end_at = 11;

  google.protobuf.Struct metadata = 20;
  google.protobuf.Timestamp created_at = 21;

  BillingAccount customer = 101 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message PaymentMethod {
  string id = 1;
  string customer_id = 2;
  string provider_id = 3;
  string type = 4;
  string card_brand = 15;
  string card_last4 = 16;
  int64 card_expiry_month = 17;
  int64 card_expiry_year = 18;

  google.protobuf.Struct metadata = 20;
  google.protobuf.Timestamp created_at = 21;
}

message Webhook {
  message Secret {
    string id = 1;
    string value = 2;
  }

  string id = 1;
  string description = 2;
  string url = 3;
  repeated string subscribed_events = 4;
  // headers to be sent with the webhook
  map<string, string> headers = 5;

  // secret to sign the payload, there could be multiple enabled secrets for a webhook
  // but only one will be used to sign the payload, this is useful for rotating secrets
  repeated Secret secrets = 6;
  string state = 7;

  google.protobuf.Struct metadata = 20;
  google.protobuf.Timestamp created_at = 21;
  google.protobuf.Timestamp updated_at = 22;
}

message WebhookEvent {
  string id = 1;
  string action = 2;
  google.protobuf.Struct data = 3;

  google.protobuf.Struct metadata = 20;
  google.protobuf.Timestamp created_at = 21 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The time the log was created.",
    example: "\"2023-06-07T05:39:56.961Z\""
  }];
}

// Model crud body

message RoleRequestBody {
  reserved 1, 4;

  string name = 2 [(validate.rules).string = {
    min_len: 2,
    pattern: "^[A-Za-z0-9-_]+$"
  }];
  repeated string permissions = 3 [(validate.rules).repeated = {min_items: 1}];
  google.protobuf.Struct metadata = 5;
  string title = 6;
  repeated string scopes = 7;
}

message PreferenceRequestBody {
  string name = 2 [(validate.rules).string = {
    min_len: 2,
    pattern: "^[A-Za-z0-9-_]+$"
  }];
  string value = 3;
}

message CheckoutSubscriptionBody {
  string plan = 1;
  bool skip_trial = 2;
  bool cancel_after_trial = 3;

  // provider_coupon_id is the coupon code that will be applied to the subscription
  // generated by the billing provider, this will be deprecated once coupons are
  // managed by the platform
  string provider_coupon_id = 4;
}

message CheckoutProductBody {
  string product = 1;
  int64 quantity = 2 [(validate.rules).int64 = {gte: 0}];
}

message CheckoutSetupBody {
  bool payment_method = 1;
  bool customer_portal = 2;
}

message Audience {
  // subscription status
  enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_UNSUBSCRIBED = 1;
    STATUS_SUBSCRIBED = 2;
  }
  string id = 1;
  string name = 5;
  string email = 8;
  string phone = 10;
  string activity = 15;
  Status status = 20;
  google.protobuf.Timestamp changed_at = 21;
  string source = 25;
  bool verified = 27;
  google.protobuf.Timestamp created_at = 30;
  google.protobuf.Timestamp updated_at = 31;
  google.protobuf.Struct metadata = 35;
}

message RQLRequest {
  repeated RQLFilter filters = 1;
  repeated string group_by = 2;
  uint32 offset = 3;
  uint32 limit = 4;
  string search = 5;
  repeated RQLSort sort = 6;
}

message RQLFilter {
  string name = 1;
  string operator = 2;
  google.protobuf.Any value = 3;
}

message RQLSort {
  string key = 1;
  string order = 2 [(validate.rules).string = {in: ["asc", "desc"]}];
}

message RQLQueryPaginationResponse {
  uint32 offset = 1;
  uint32 limit = 2;
  uint32 total_count = 3;
}